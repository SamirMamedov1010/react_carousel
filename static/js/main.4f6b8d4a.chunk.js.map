{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleButton","step","props","images","frameSize","lastItemIndex","length","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","map","img","index","transform","src","alt","type","disabled","onClick","Component","App","setWidth","event","target","value","setFrameSize","setStep","setAnimation","setInfinity","checked","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6b8d4a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleButton = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastItemIndex = images.length - frameSize;\n    const firstItemIndex = 0;\n    let nextItemIndex = currentItemIndex + step;\n\n    if (step > 0) {\n      if (currentItemIndex === lastItemIndex) {\n        nextItemIndex = firstItemIndex;\n      } else if (nextItemIndex > lastItemIndex) {\n        nextItemIndex = lastItemIndex;\n      }\n    }\n\n    if (step < 0) {\n      if (currentItemIndex === firstItemIndex) {\n        nextItemIndex = lastItemIndex;\n      } else if (nextItemIndex < firstItemIndex) {\n        nextItemIndex = firstItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {\n            images.map((img, index) => {\n              return (\n                <li\n                  key={img}\n                  className=\"Carousel__item\"\n                  style={{\n                    transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={img}\n                    alt={`emoji-${index + 1}`}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"Carousel__btn\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={currentItemIndex <= 0 && !infinity}\n            onClick={this.handleButton(-step)}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            disabled={\n              currentItemIndex >= images.length - frameSize && !infinity\n            }\n            onClick={this.handleButton(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frameSize: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    step: 3,\n    frameSize: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimation = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinity: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          step={step}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n        <label\n          htmlFor=\"itemId\"\n          className=\"App__label\"\n        >\n          Item Width:\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setWidth}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"App__label\"\n        >\n          Frame Size:\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"App__label\"\n        >\n          Step:\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animation\"\n          className=\"App__label\"\n        >\n          Animation:\n          <input\n            id=\"animation\"\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimation}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infinity\"\n          className=\"App__label\"\n        >\n          Infinity:\n          <input\n            id=\"infinity\"\n            type=\"checkbox\"\n            onChange={this.setInfinity}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}